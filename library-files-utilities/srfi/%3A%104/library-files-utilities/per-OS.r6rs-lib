#!r6rs  ;; Required by PLT Scheme.

;;; SPDX-FileCopyrightText: 2010 Derick Eddington
;;;
;;; SPDX-License-Identifier: MIT

(library (srfi :104 library-files-utilities per-OS)
  (export
    identify-OS
    param-vals-for-OS)
  (import
    (rnrs base (6))
    (only (rnrs lists (6))
          assp)
    (only (rnrs unicode (6))
          string-ci=?))

  (define (identify-OS OS-str OS-alist)
    (define OS-str-len (string-length OS-str))
    (define (OS-str-contains? str)
      (define str-len (string-length str))
      (let loop ((i 0))
        (and (<= (+ i str-len) OS-str-len)
             (or (string-ci=? str (substring OS-str i (+ i str-len)))
                 (loop (+ 1 i))))))
    (cond
      ((assp OS-str-contains? OS-alist)
       => cdr)
      (else
       (error 'identify-OS "unable to identify OS" OS-str))))

  (define (param-vals-for-OS OS)
    ;; TODO: Is this all correct and as complete as it should be?
    (case OS
      ((linux solaris bsd darwin cygwin)
       (values
        ;; file-name-component-separator
        #\/
        ;; environment-variable element separator
        #\:))
      ((windows)
       (values
        ;; file-name-component-separator
        #\\
        ;; environment-variable element separator
        #\;))
      (else
       (assertion-violation 'param-vals-for-OS "unknown OS" OS))))
)
